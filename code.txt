<!DOCTYPE HTML>
<html>
<head>
     <title>Robo control Web Server</title> 
     <meta name="viewport" content="width=device-width, initial-scale=1">
      <style> html { 
          font-family: Arial;
       display: inline-block; 
       margin: 0px auto; 
       text-align: center; }
       h1 { color: #0F3376; 
       padding: 2vh; 
       }
        p { font-size: 1.5rem; }
         .button { display: inline-block; 
            -color: #008CBA;
             border: none;
             border-radius: 4px; 
            color: white;
         padding: 16px 40px; 
         text-decoration: none;
          font-size: 30px; 
          margin: 2px; cursor: pointer; 
          }
           .button3 {
                background-color: #f44336;
                 }
</style> 
</head>

<body>
     <h1>Web Controlled Robo Car</h1>
     <p>
          <a href="/forward"><button class="button">FORWARD</button></a> 
          <a href="/backward"><button class="button button2">BACKWARD</button></a>
    </p>
    <p>
         <a href="/stop"><button class="button button3">STOP</button></a>
    </p> 
    <p> <a href="/right"><button class="button button4">RIGHT</button></a> 
        <a href="/left"><button class="button button5">LEFT</button></a> 
    </p> 
    <p> <span class="sensor-labels">Distance</span> <span id="distance">%Distance% cm</span> 
    </p>
 </body>
 
 <script> 
    setInterval(function ( ) {
         var xhttp = new XMLHttpRequest(); 
         xhttp.onreadystatechange = function() { 
             if (this.readyState == 4 && this.status == 200) { 
                 document.getElementById("distance").innerHTML = this.responseText; 
                 } 
                 }; 
        xhttp.open("GET", "/distance", true);
        xhttp.send(); 
        }, 5000 ) ; 
</script>
</html>)

rawliteral";
void setup(){ Serial.begin(115200);
    pinMode(trigP, OUTPUT); 
    pinMode(echoP, INPUT); 
    pinMode(MA1, OUTPUT); 
    pinMode(MA2, OUTPUT); 
    pinMode(MB1, OUTPUT); 
    pinMode(MB2, OUTPUT); 
    pinMode(ENA, OUTPUT); 
    pinMode(ENB, OUTPUT);

    // Connect to Wi-Fi 
    WiFi.begin(ssid, password);
     while (WiFi.status() != WL_CONNECTED) { 
         (1000); Serial.println(".."); 
        } 
        Serial.println(WiFi.localIP());
    server.on("/", HTTP_GET, [](AsyncWebServerRequest *request){ 
        request->send_P(200, "text/html", index_html); });
         server.on("/forward", HTTP_GET, 
         [](AsyncWebServerRequest *request){ 
             digitalWrite(MA1,HIGH);
              digitalWrite(MA2,LOW); 
              (MB1,HIGH); digitalWrite(MB2,LOW);
               request->send(200, "text/html",
                index_html); }); 
                server.on("/backward", 
                HTTP_GET, [](AsyncWebServerRequest *request){ 
                    digitalWrite(MA1,LOW); 
                    digitalWrite(MA2,HIGH);
                     digitalWrite(MB1,LOW); 
                     digitalWrite(MB2,HIGH); 
                     request->send(200, "text/html", index_html); });
                      server.on("/stop", HTTP_GET, 
                      [](AsyncWebServerRequest *request){ 
                          digitalWrite(MA1,LOW); 
                          digitalWrite(MA2,LOW);
                           digitalWrite(MB1,LOW);
                            digitalWrite(MB2,LOW);

        request->send(200, 
        "text/html",
         index_html); });
         server.on("/right", HTTP_GET,
          [](AsyncWebServerRequest *request){ 
              digitalWrite(MA1,HIGH); digitalWrite(MA2,LOW);
               digitalWrite(MB1,LOW); digitalWrite(MB2,HIGH);
                request->send(200, "text/html", index_html); });
                 server.on("/left", HTTP_GET, [](AsyncWebServerRequest *request){
                      digitalWrite(MA1,LOW);
                       digitalWrite(MA2,HIGH); 
                      digitalWrite(MB1,HIGH);
                       digitalWrite(MB2,LOW);
                        request->send(200, "text/html", 
                        index_html); });
                        server.on("/distance", HTTP_GET,
                         [](AsyncWebServerRequest *request){
                              request->send_P(200, "text/plain",
                               getDistance().c_str()); });
                                // Start server server.begin(); }